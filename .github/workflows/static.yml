name: Deploy Static Site

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build CSS from SCSS
      run: |
        # Compilar SCSS a CSS Y aplicar PurgeCSS
        npm run build:production
        
    - name: Optimize images
      run: |
        # Optimizar imágenes
        npm run optimize:images
        
    - name: Verify PurgeCSS output
      run: |
        # Verificar que PurgeCSS haya funcionado
        echo "=== Verificando archivos CSS purgados ==="
        ls -la assets/css/purged/ || echo "Directorio purged no existe"
        ls -la assets/css/purged/*.css || echo "No hay archivos CSS purgados"
        
        echo "=== Verificando tamaños de archivos CSS ==="
        du -h assets/css/*.css | sort -h
        echo "=== Verificando tamaños de archivos CSS purgados ==="
        du -h assets/css/purged/*.css | sort -h || echo "No hay archivos purgados"
        
    - name: Copy purged CSS files to deployment directory
      run: |
        echo "=== ELIMINANDO archivos CSS originales pesados ==="
        # Eliminar archivos CSS originales pesados para evitar duplicación
        rm -f assets/css/fontawesome.css
        rm -f assets/css/animate.css
        rm -f assets/css/styles.css
        
        echo "=== COPIANDO archivos CSS purgados ==="
        # Copiar archivos purgados al directorio principal
        cp assets/css/purged/*.css assets/css/
        
        echo "=== Verificando archivos CSS finales ==="
        ls -la assets/css/*.css | head -10
        
        echo "=== Verificando que no haya duplicados ==="
        find assets/css/ -name "*.css" -type f | sort
        
    - name: Build and prepare files
      run: |
        # Asegurar que todos los directorios estén presentes
        mkdir -p assets/css assets/images assets/js assets/webfonts
        
        # Verificar que los archivos críticos existan
        echo "=== Verificando estructura de archivos ==="
        ls -la assets/
        ls -la assets/css/
        ls -la assets/images/
        ls -la assets/js/
        
        echo "=== Verificando archivos CSS compilados ==="
        ls -la assets/css/*.css
        
        echo "=== Verificando archivos CSS purgados ==="
        ls -la assets/css/purged/*.css || echo "No hay archivos CSS purgados"
        
        echo "=== Verificando imágenes optimizadas ==="
        ls -la assets/images/*.webp || echo "No hay archivos WebP"
        ls -la assets/images/*.png | head -5
        
        echo "=== Verificando archivo principal ==="
        ls -la index.html
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: .
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
